// L√†m ƒëi Minh n√®eeeeeeeeeee
import 'package:flutter/material.dart';
import 'package:flutter/rendering.dart';
import 'package:tmt_project/core/widgets/minh/customCarousel.dart';
import 'package:tmt_project/core/widgets/minh/customCheckbox.dart'; // ScrollDirection
import 'package:tmt_project/core/widgets/minh/customTextField.dart';
import 'package:tmt_project/core/widgets/minh/customToast.dart';
//b·∫£ng m√†u s·∫Øc
// color.Theme.of(context).colorScheme.inversePrimary ; ===> n·ªÅn c·ªßa button hay c√°c bar
// color.Theme.of(context).colorScheme.primary;         ===> ch·ªØ hay icon
// color.Theme.of(context).colorScheme.primaryContainer;===> n·ªÅn card hay n·ªÅn ch·ª©a n·ªôi dung

/// =================== DOMAIN MODEL ===================

class codeDiMinhoi extends StatefulWidget {
  const codeDiMinhoi({super.key});

  @override
  State<codeDiMinhoi> createState() => _codeDiMinhoiState();
}

class _codeDiMinhoiState extends State<codeDiMinhoi> {
  final TextEditingController _passwordCtrl = TextEditingController();
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Column(
          children: [
            const SizedBox(height: 12),
            const UseCustomCarousel(), //n·∫Øm ƒë·∫ßu t√™n class n√†y ra m√† x√†i
            const SizedBox(height: 24),
            CustomCheckbox(
              initialValue: false,
              onChanged: (value) {
                print("‚úÖ Checked: $value");
              }, // H√†m n√†y s·∫Ω ƒë∆∞·ª£c g·ªçi khi checkbox ƒë∆∞·ª£c b·∫•m
            ), //n·∫Øm ƒë·∫ßu t√™n class n√†y ra m√† x√†i
            const SizedBox(height: 12),

            _buildButton(
              label: "‚úÖ Th√†nh c√¥ng",
              color: Colors.green,
              onPressed: () {
                CustomToast.show(
                  context,
                  message: "L∆∞u d·ªØ li·ªáu th√†nh c√¥ng!",
                  type: ToastType.success,
                );
              },
            ),
            const SizedBox(height: 10),
            _buildButton(
              label: "‚ùå L·ªói",

              color: Colors.red,
              onPressed: () {
                CustomToast.show(
                  context,
                  message: "ƒê√£ x·∫£y ra l·ªói kh√¥ng mong mu·ªën!",
                  type: ToastType.error,
                );
              },
            ),

            const Divider(
              color: Colors.grey,
              thickness: 2, // ƒê·ªô d√†y
              indent: 20, // Th·ª•t ƒë·∫ßu d√≤ng tr√°i
              endIndent: 20, // Th·ª•t ƒë·∫ßu d√≤ng ph·∫£i
              height: 40,
            ),

            Container(
              decoration: BoxDecoration(
                boxShadow: [
                  BoxShadow(
                    color: Theme.of(context).colorScheme.primaryContainer,
                    blurRadius: 12,
                    offset: const Offset(0, 6),
                  ),
                ],
              ),
              child: PinkShadowTextField(
                //g·ªçi kh·ª©a n√†y ra m√† x√†i
                label:
                    "H·ªç v√† t√™n", //th√™m nh√£n label v√†o ƒë·ªÉ cho n√≥ bi·∫øt ƒë√¢y l√† √¥ nh·∫≠p g√¨
                controller:
                    TextEditingController(), // ƒëi·ªÅu khi·ªÉn √¥ nh·∫≠p n√†y ƒë·ªÉ l√†m g√¨
              ),
            ),
            const SizedBox(height: 20),
            PasswordStrengthTextField(controller: _passwordCtrl),
            const SizedBox(height: 20),

            // √î nh·∫≠p l·∫°i ƒë·ªÉ ki·ªÉm tra kh·ªõp
            ConfirmPasswordTextField(originalPasswordController: _passwordCtrl),
          ],
        ),
      ),
    );
  }
}

Widget _buildButton({
  required String label,
  required VoidCallback onPressed,
  required Color color,
}) {
  return SizedBox(
    width: double.infinity,
    child: ElevatedButton(
      style: ElevatedButton.styleFrom(
        backgroundColor: color,
        padding: const EdgeInsets.symmetric(vertical: 14),
      ),
      onPressed: onPressed,
      child: Text(label, style: const TextStyle(fontSize: 16)),
    ),
  );
}

// void showDauTayToast(BuildContext context) {
//   CustomToast.show(
//     context,
//     message: "üçì Anh l√† d√¢u t√¢y ng·ªçt ng√†o nh·∫•t!",
//     backgroundColor: Colors.pinkAccent.shade100,
//     textColor: Colors.white,
//     icon: Icons.favorite,
//     width: 320,
//     borderRadius: 16,
//     duration: const Duration(seconds: 4),
//     messageStyle: const TextStyle(
//       fontSize: 16,
//       fontWeight: FontWeight.bold,
//       color: Colors.white,
//     ),
//     boxShadow: [
//       const BoxShadow(
//         color: Colors.pink,
//         blurRadius: 15,
//         spreadRadius: 1,
//         offset: Offset(0, 6),
//       ),
//     ],
//   );
// }
